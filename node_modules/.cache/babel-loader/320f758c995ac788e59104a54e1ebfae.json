{"ast":null,"code":"import _objectSpread from \"/Users/bryced/repos/react-event-calendar/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/bryced/repos/react-event-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bryced/repos/react-event-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bryced/repos/react-event-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bryced/repos/react-event-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bryced/repos/react-event-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bryced/repos/react-event-calendar/src/lib/components/Calendar.js\";\nimport React from 'react';\nimport dateFns from 'date-fns';\nimport './Calendar.css';\n\nvar isInArray = function isInArray(array, date) {\n  return !!array.find(function (item) {\n    return item.getTime() === date.getTime();\n  });\n};\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedMonth: _this.props.selectedMonth,\n      selectedDate: _this.props.selectedDate,\n      eventDates: _this.props.eventDates\n    };\n\n    _this.onDateClick = function (day) {\n      _this.setState({\n        selectedDate: day\n      });\n\n      if (_this.props.onChange) _this.props.onChange(day);\n    };\n\n    _this.nextMonth = function () {\n      _this.setState({\n        selectedMonth: dateFns.addMonths(_this.state.selectedMonth, 1)\n      });\n    };\n\n    _this.prevMonth = function () {\n      _this.setState({\n        selectedMonth: dateFns.subMonths(_this.state.selectedMonth, 1)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var label = dateFns.format(this.state.selectedMonth, 'MMMM YYYY');\n      var customStyles = this.props.customStyles;\n      return React.createElement(\"div\", {\n        className: \"header row\",\n        style: customStyles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-start\",\n        style: customStyles.prev,\n        onClick: this.prevMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"chevron_left\")), React.createElement(\"div\", {\n        className: \"col col-center\",\n        style: customStyles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, label)), React.createElement(\"div\", {\n        className: \"col col-end\",\n        style: customStyles.next,\n        onClick: this.nextMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"chevron_right\")));\n    }\n  }, {\n    key: \"renderDays\",\n    value: function renderDays() {\n      var customStyles = this.props.customStyles;\n      var startDate = dateFns.startOfWeek(this.state.selectedMonth);\n      var days = [];\n\n      for (var i = 0; i < 7; i++) {\n        var label = dateFns.format(dateFns.addDays(startDate, i), 'ddd');\n        days.push(React.createElement(\"div\", {\n          key: i,\n          className: \"col col-center\",\n          style: customStyles.days,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, label));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"days row\",\n        style: customStyles.daysRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, days);\n    }\n  }, {\n    key: \"renderCells\",\n    value: function renderCells() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          selectedMonth = _this$state.selectedMonth,\n          selectedDate = _this$state.selectedDate,\n          eventDates = _this$state.eventDates;\n      var _this$props = this.props,\n          minDate = _this$props.minDate,\n          maxDate = _this$props.maxDate,\n          customStyles = _this$props.customStyles;\n      var monthStart = dateFns.startOfMonth(selectedMonth);\n      var monthEnd = dateFns.endOfMonth(monthStart);\n      var startDate = dateFns.startOfWeek(monthStart);\n      var endDate = dateFns.endOfWeek(monthEnd);\n      var rows = [];\n      var days = [];\n      var day = startDate;\n\n      while (day <= endDate) {\n        var _loop = function _loop(i) {\n          var formattedDate = dateFns.format(day, 'D');\n          var cloneDay = day;\n          var outerClass = 'col cell';\n          var outerStyle = customStyles.cell;\n\n          if (!dateFns.isSameMonth(day, monthStart)) {\n            outerClass += ' disabled';\n            outerStyle = _objectSpread({}, outerStyle, customStyles.extra);\n          }\n\n          if (dateFns.isBefore(day, minDate) || dateFns.isAfter(day, maxDate)) {\n            outerClass += ' disabled outside';\n            outerStyle = _objectSpread({}, outerStyle, customStyles.extra, customStyles.outOfRange);\n          }\n\n          var innerClass = 'innerCell';\n          var innerStyle = customStyles.innerCell;\n\n          if (isInArray(eventDates, day)) {\n            innerClass += ' event';\n            innerStyle = _objectSpread({}, innerStyle, customStyles.event);\n          }\n\n          if (dateFns.isSameDay(day, selectedDate)) {\n            innerClass += ' selected';\n            innerStyle = _objectSpread({}, innerStyle, customStyles.selected);\n          }\n\n          days.push(React.createElement(\"div\", {\n            key: day,\n            className: outerClass,\n            style: outerStyle,\n            onClick: function onClick() {\n              return _this2.onDateClick(dateFns.parse(cloneDay));\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: innerClass,\n            style: innerStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"number\",\n            style: customStyles.number,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, formattedDate))));\n          day = dateFns.addDays(day, 1);\n        };\n\n        for (var i = 0; i < 7; i++) {\n          _loop(i);\n        }\n\n        rows.push(React.createElement(\"div\", {\n          key: day,\n          className: \"row\",\n          style: customStyles.numberRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, days));\n        days = [];\n      }\n\n      return React.createElement(\"div\", {\n        className: \"body\",\n        style: customStyles.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, rows);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var customStyles = this.props.customStyles;\n      return React.createElement(\"div\", {\n        className: \"calendar\",\n        style: customStyles.calendar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.renderHeader(), this.renderDays(), this.renderCells());\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nCalendar.defaultProps = {\n  onChange: function onChange() {},\n  selectedMonth: new Date(),\n  selectedDate: new Date(),\n  eventDates: [],\n  minDate: undefined,\n  maxDate: undefined,\n  customStyles: {\n    header: {},\n    title: {},\n    prev: {},\n    next: {},\n    days: {},\n    daysRow: {},\n    body: {},\n    numberRow: {},\n    cell: {},\n    innerCell: {},\n    number: {},\n    selected: {},\n    event: {},\n    disabled: {},\n    outOfRange: {}\n  }\n};\nexport default Calendar;","map":{"version":3,"sources":["/Users/bryced/repos/react-event-calendar/src/lib/components/Calendar.js"],"names":["React","dateFns","isInArray","array","date","find","item","getTime","Calendar","state","selectedMonth","props","selectedDate","eventDates","onDateClick","day","setState","onChange","nextMonth","addMonths","prevMonth","subMonths","label","format","customStyles","header","prev","title","next","startDate","startOfWeek","days","i","addDays","push","daysRow","minDate","maxDate","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","formattedDate","cloneDay","outerClass","outerStyle","cell","isSameMonth","extra","isBefore","isAfter","outOfRange","innerClass","innerStyle","innerCell","event","isSameDay","selected","parse","number","numberRow","body","calendar","renderHeader","renderDays","renderCells","Component","defaultProps","Date","undefined","disabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dateFns from 'date-fns';\n\nimport './Calendar.css';\n\nconst isInArray = (array, date) => (\n  !!array.find((item) => item.getTime() === date.getTime())\n);\n\nclass Calendar extends React.Component {\n  state = {\n    selectedMonth: this.props.selectedMonth,\n    selectedDate: this.props.selectedDate,\n    eventDates: this.props.eventDates\n  };\n\n  renderHeader() {\n    const label = dateFns.format(this.state.selectedMonth, 'MMMM YYYY')\n    const { customStyles } = this.props;\n\n    return (\n      <div className=\"header row\" style={customStyles.header}>\n        <div \n          className=\"col col-start\"\n          style={customStyles.prev} \n          onClick={this.prevMonth}\n        >\n          <div className=\"icon\">chevron_left</div>\n        </div>\n        <div className=\"col col-center\" style={customStyles.title}>\n          <span>{label}</span>\n        </div>\n        <div \n          className=\"col col-end\"\n          style={customStyles.next}\n          onClick={this.nextMonth}\n        >\n          <div className=\"icon\">chevron_right</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderDays() {\n    const { customStyles } = this.props;\n    const startDate = dateFns.startOfWeek(this.state.selectedMonth);\n    const days = [];\n\n    for (let i = 0; i < 7; i++) {\n      const label = dateFns.format(dateFns.addDays(startDate, i), 'ddd');\n\n      days.push(\n        <div \n          key={i}\n          className=\"col col-center\"\n          style={customStyles.days}\n        >\n          {label}\n        </div>\n      );\n    }\n\n    return <div className=\"days row\" style={customStyles.daysRow}>{days}</div>;\n  }\n\n  renderCells() {\n    const { selectedMonth, selectedDate, eventDates } = this.state;\n    const { minDate, maxDate, customStyles } = this.props;\n    const monthStart = dateFns.startOfMonth(selectedMonth);\n    const monthEnd = dateFns.endOfMonth(monthStart);\n    const startDate = dateFns.startOfWeek(monthStart);\n    const endDate = dateFns.endOfWeek(monthEnd);\n    const rows = [];\n    let days = [];\n    let day = startDate;\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        const formattedDate = dateFns.format(day, 'D');\n        const cloneDay = day;\n\n        let outerClass = 'col cell';\n        let outerStyle = customStyles.cell;\n        if (!dateFns.isSameMonth(day, monthStart)) {\n          outerClass += ' disabled';\n          outerStyle = {...outerStyle, ...customStyles.extra};\n        }\n        if (dateFns.isBefore(day, minDate) || dateFns.isAfter(day, maxDate)) {\n          outerClass += ' disabled outside';\n          outerStyle = {...outerStyle, ...customStyles.extra, ...customStyles.outOfRange };\n        }\n\n        let innerClass = 'innerCell';\n        let innerStyle = customStyles.innerCell;\n        if (isInArray(eventDates, day)) {\n          innerClass += ' event';\n          innerStyle = {...innerStyle, ...customStyles.event};\n        }\n        if (dateFns.isSameDay(day, selectedDate)) {\n          innerClass += ' selected';\n          innerStyle = {...innerStyle, ...customStyles.selected};\n        }\n\n        days.push(\n          <div\n            key={day}\n            className={outerClass}\n            style={outerStyle}\n            onClick={() => this.onDateClick(dateFns.parse(cloneDay))}\n          >\n            <div className={innerClass} style={innerStyle}>\n              <span className=\"number\" style={customStyles.number}>{formattedDate}</span>\n            </div>\n          </div>\n        );\n\n        day = dateFns.addDays(day, 1);\n      }\n\n      rows.push(\n        <div \n          key={day}\n          className=\"row\"\n          style={customStyles.numberRow}\n        >\n          {days}\n        </div>\n      );\n\n      days = [];\n    }\n    return <div className=\"body\" style={customStyles.body}>{rows}</div>;\n  }\n\n  onDateClick = day => {\n    this.setState({ selectedDate: day });\n    if (this.props.onChange) this.props.onChange(day);\n  };\n\n  nextMonth = () => {\n    this.setState({ selectedMonth: dateFns.addMonths(this.state.selectedMonth, 1) });\n  };\n\n  prevMonth = () => {\n    this.setState({ selectedMonth: dateFns.subMonths(this.state.selectedMonth, 1) });\n  };\n\n  render() {\n    const { customStyles } = this.props;\n    return (\n      <div className=\"calendar\" style={customStyles.calendar}>\n        {this.renderHeader()}\n        {this.renderDays()}\n        {this.renderCells()}\n      </div>\n    );\n  }\n}\n\nCalendar.defaultProps = {\n  onChange: () => {},\n  selectedMonth: new Date(),\n  selectedDate: new Date(),\n  eventDates: [],\n  minDate: undefined,\n  maxDate: undefined,\n  customStyles: {\n    header: {},\n    title: {},\n    prev: {},\n    next: {},\n    days: {},\n    daysRow: {},\n    body: {},\n    numberRow: {},\n    cell: {},\n    innerCell: {},\n    number: {},\n    selected: {},\n    event: {},\n    disabled: {},\n    outOfRange: {}\n  }\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}